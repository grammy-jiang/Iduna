[tool.black]
extend-exclude = [".*/migrations/[0-9]{4}_.*.py"]

[tool.django-stubs]
django_settings_module = "tests.settings_mypy"

[tool.isort]
extend_skip_glob = ["**/migrations"]
known_django = "django,rest_framework"
line_length = 88
profile = "black"
sections = "FUTURE,STDLIB,THIRDPARTY,DJANGO,FIRSTPARTY,LOCALFOLDER"
skip_gitignore = true

[tool.mypy]
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.pylint.main]
# Add files or directories matching the regular expressions patterns to the
# ignore-list. The regex matches against paths and can be in Posix or Windows
# format. Because '\' represents the directory delimiter on Windows systems, it
# can't be used as an escape character.
ignore-paths = [".*/migrations/[0-9]{4}_.*.py"]

# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use, and will cap the count on Windows to
# avoid hangs.
jobs = 0

# List of plugins (as comma separated values of python module names) to load,
# usually to register additional checkers.
load-plugins = ["pylint_django"]

[tool.pylint."django foreign keys referenced by strings"]
# A module containing Django settings to be used while linting.
django-settings-module = "config.settings"

[tool.pylint.format]
# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines = "^\\s*([#\\*]\\s)?<?https?://\\S+>?$"

# Maximum number of characters on a single line.
max-line-length = 88

[tool.pylint.reports]
# Set the output format. Available formats are text, parseable, colorized, json
# and msvs (visual studio). You can also give a reporter class, e.g.
# mypackage.mymodule.MyReporterClass.
output-format="colorized"
